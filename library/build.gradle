apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
    delete "$rootDir/docs"

    outputFormat = 'html'
    outputDirectory = "$rootDir/docs"

    externalDocumentationLink {
        url = new URL("https://developer.android.com/reference/")
    }

    includeNonPublic = false

    // Always recreate documentation
    outputs.upToDateWhen { return false }
}



afterEvaluate {
    if (project.hasProperty("javadocJar")) {
        tasks.javadocJar.dependsOn dokkaJavadoc
    }
}

ext{
    package_name = 'com.joeiot'
    artifactVersion = '2.0.4'//release包发布的版本
    artifactGroup = "drawablebadge"
    artifactFilePath = "${project.buildDir}/outputs/aar/${project.name}-" +
            "${(artifactVersion.endsWith('SNAPSHOT') || artifactVersion.endsWith('snapshot'))?'debug':'release'}.aar"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 6
        versionName "2.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(Javadoc) {
    excludes = ['**/*.kt']
}

dependencies {
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}




//apply from: '../local-maven.gradle'
apply from: '../gradle-mvn-push.gradle'